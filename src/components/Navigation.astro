---
// Navigation component with cache links
export interface Props {
  currentPath?: string;
}

const { currentPath = "/" } = Astro.props;

const navItems = [
  { name: "Home", href: "/", icon: "🏠" },
  { name: "Cache", href: "/cache/", icon: "📚" },
  { name: "About", href: "/about/", icon: "ℹ️" },
  { name: "Contact", href: "/contact/", icon: "📧" }
];

const isActive = (href: string) => {
  if (href === "/" && currentPath === "/") return true;
  if (href !== "/" && currentPath.startsWith(href)) return true;
  return false;
};
---

<nav class="bg-white shadow-sm border-b sticky top-0 z-50">
  <div class="max-w-6xl mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <!-- Logo/Brand -->
      <div class="flex items-center space-x-8">
        <a href="/" class="text-xl font-bold text-gray-900 hover:text-blue-600 transition-colors">
          Everything Machines
        </a>
        
        <!-- Desktop Navigation -->
        <div class="hidden md:flex items-center space-x-6">
          {navItems.slice(1).map(item => (
            <a 
              href={item.href} 
              class={`flex items-center space-x-1 px-3 py-2 rounded-lg transition-colors ${
                isActive(item.href) 
                  ? 'bg-blue-100 text-blue-700 font-medium' 
                  : 'text-gray-600 hover:text-blue-600 hover:bg-gray-50'
              }`}
            >
              <span class="text-sm">{item.icon}</span>
              <span>{item.name}</span>
            </a>
          ))}
        </div>
      </div>

      <!-- Right Side Actions -->
      <div class="flex items-center space-x-4">
        <!-- Cache Quick Access -->
        <div class="hidden lg:flex items-center space-x-2">
          <span class="text-sm text-gray-500">Quick:</span>
          <a 
            href="/cache/barndoor/ai-tools/clay/" 
            class="text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded hover:bg-gray-200 transition-colors"
          >
            Clay AI
          </a>
        </div>
        
        <!-- Primary CTA -->
        <a 
          href="/cache/" 
          class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors font-medium text-sm"
        >
          Browse Cache
        </a>

        <!-- Mobile Menu Button -->
        <button 
          id="mobile-menu-button"
          class="md:hidden p-2 rounded-lg text-gray-600 hover:text-gray-900 hover:bg-gray-100"
          aria-label="Toggle mobile menu"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden md:hidden mt-4 pb-4 border-t border-gray-200">
      <div class="flex flex-col space-y-2 pt-4">
        {navItems.map(item => (
          <a 
            href={item.href}
            class={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-colors ${
              isActive(item.href) 
                ? 'bg-blue-100 text-blue-700 font-medium' 
                : 'text-gray-600 hover:text-blue-600 hover:bg-gray-50'
            }`}
          >
            <span>{item.icon}</span>
            <span>{item.name}</span>
          </a>
        ))}
        
        <!-- Mobile Quick Links -->
        <div class="pt-2 mt-2 border-t border-gray-200">
          <p class="text-xs text-gray-500 mb-2 px-3">Quick Access:</p>
          <a 
            href="/cache/barndoor/ai-tools/clay/" 
            class="flex items-center space-x-2 px-3 py-2 text-sm text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-lg transition-colors"
          >
            <span>🤖</span>
            <span>Clay AI Profile</span>
          </a>
        </div>
      </div>
    </div>
  </div>
</nav>

<!-- Mobile Menu Toggle Script -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function() {
        mobileMenu.classList.toggle('hidden');
      });
    }
  });
</script>

<style>
  /* Smooth transitions for mobile menu */
  #mobile-menu {
    transition: all 0.3s ease-in-out;
  }
  
  /* Active state styling */
  .nav-active {
    @apply bg-blue-100 text-blue-700 font-medium;
  }
</style>